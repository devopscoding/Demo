{"version":3,"sources":["components/CourseCard.js","config.js","Screen/Home.js","components/PromoteCards.js","Screen/NewCourse.js","Screen/Request.js","Screen/Details.js","navigation/navigation.js","Screen/Share.js","App.js","assets/SideMenuIcon.png"],"names":["CourseCard","text","onPress","bgImage","TouchableOpacity","View","style","styles","button","Text","buttontext","Card","Cover","source","uri","resizeMode","flex","StyleSheet","create","marginTop","marginLeft","marginRight","marginBottom","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","opacity","color","fontWeight","textTransform","textAlign","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","length","Home","props","state","items","isLoading","get","this","ref","limitToLast","on","snapshot","userItem","val","console","log","Object","values","reverse","setState","navigation","preloader","ActivityIndicator","size","container","SafeAreaView","FlatList","data","renderItem","item","name","navigate","image","des","productURL","link","keyExtractor","id","React","justifyContent","Item","promoteURL","proImage","Linking","openURL","width","PromoteCards","horizontal","NewCourse","ScrollView","Request","handleEmail","email","subject","body","catch","error","title","subtitle","btnText","Component","fontSize","alignItems","padding","Details","Image","bgimage","route","params","goBack","btnBack","btn","height","fontFamily","position","HomeStack","createStackNavigator","HomeStackScreen","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","headerLeft","Button","openDrawer","Detail","headerShown","NewCourseStack","NewCourseStackScreen","RequestStack","RequestStackScreen","onShare","a","async","Share","share","message","result","action","sharedAction","activityType","dismissedAction","alert","Drawer","createDrawerNavigator","App","NavigationContainer","initialRouteName","drawerContent","CustomDrawerContent","drawerStyle","drawerContentOptions","activeTintColor","inactiveTintColor","drawerIcon","focused","require","sideMenuIcon","DrawerContentScrollView","DrawerItemList","DrawerItem","icon","label","alignSelf","module","exports"],"mappings":"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","file":"static/js/app.5ad97490.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button, TouchableOpacity, Image } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nexport default function CourseCard({text, onPress, bgImage}){\n  return(\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.button}>\n        <Text style={styles.buttontext}>{ text }</Text>\n        <Card>\n          <Card.Cover source={{uri: bgImage }} style={{resizeMode: 'resize', flex: 1}}/>\n        </Card>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button:{\n    marginTop:5,\n    marginLeft:5,\n    marginRight:5,\n    marginBottom:5,\n    borderRadius:10,\n    paddingVertical: 14,\n    paddingHorizontal: 5,\n    backgroundColor: \"#494F56\",\n    opacity: 1,\n  },\n  buttontext:{\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    textAlign:\"center\",\n    marginBottom:4\n  }\n})","const firebaseConfig = {\n  apiKey: 'AIzaSyDtRjSjF8NqZaQ__d1BQ8s5CKnUhzZ29g0',\n  authDomain: 'udemy-admin21.firebaseapp.com',\n  databaseURL: 'https://udemy-admin21-default-rtdb.firebaseio.com',\n  projectId: 'udemy-admin21',\n  storageBucket: 'udemy-admin21.appspot.com',\n  messagingSenderId: '1075289755756',\n  appId: '1:1075289755756:web:38e1a246afd1b981ca0849',\n  measurementId: 'G-CCTDZ5DHTK',\n};\n\n// firebase.initializeApp(firebase);\n\nexport default firebaseConfig;\n","import * as React from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  ScrollView,\n  SafeAreaView,\n  FlatList,\n  ActivityIndicator,\n} from 'react-native';\n\n//other files\nimport CourseCard from '../components/CourseCard.js';\nimport firebaseConfig from '../config'; // import firebase config file\nimport * as firebase from 'firebase'; // import firebase pkg\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    var get = this;\n    const myitem = firebase.database().ref('coursedata').limitToLast(100);\n    myitem.on('value', function (snapshot) {\n      const userItem = snapshot.val();\n      console.log(userItem);\n      let items = Object.values(userItem).reverse();\n      get.setState({ items: items, isLoading: false });\n    });\n  }\n\n  render(navigation) {\n    if (this.state.isLoading) {\n      return (\n        <View style={styles.preloader}>\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\n        </View>\n      );\n    }\n\n    const renderItem = ({ item }) => {\n      return (\n        <CourseCard\n          item={item}\n          text={item.name}\n          onPress={() => this.props.navigation.navigate('Detail', item)}\n          bgImage={item.image}\n          des={item.des}\n          productURL={item.link}\n        />\n      );\n    };\n    return (\n      <View style={styles.container}>\n        <SafeAreaView style={styles.container}>\n          <FlatList\n            data={this.state.items}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  preloader: {\n    justifyContent: 'center',\n  },\n});\n\nexport default Home;\n","import * as React from 'react';\nimport { Text, View, StyleSheet, Button, TouchableOpacity, SafeAreaView, FlatList, Linking, ScrollView } from 'react-native';\nimport { Card } from 'react-native-paper';\n\n//import database\nimport firebaseConfig  from '../config'; // import firebase config file\nimport * as firebase from 'firebase'; // import firebase pkg\n\nif(!firebase.apps.length){\n  firebase.initializeApp(firebaseConfig);\n}\n  \nconst Item = ({ promoteURL, proImage }) => (\n    <TouchableOpacity onPress={() => Linking.openURL(promoteURL)}>\n      <View style={styles.button}>\n        <Card style={{width:347}}>\n          <Card.Cover source={{uri: proImage }}/>\n        </Card>\n      </View>\n    </TouchableOpacity>\n);\n\nclass PromoteCards extends React.Component{\n    constructor(props) {\n    super(props);\n    this.state ={\n      items:[]\n    }\n  }\n  componentDidMount(){\n    var get = this;\n    const myitem = firebase.database().ref(\"promotion\");\n    myitem.on(\"value\", function(snapshot) {\n        const userItem = snapshot.val();\n        console.log(userItem);\n        let items = Object.values(userItem);\n        get.setState({ items: items});\n        \n    });  \n  }\n\n  render( navigation ){\n    const renderItem = ({ item }) => {\n      return (\n        <Item\n          item={item}\n          proImage={item.image}\n          promoteURL={item.link}\n        />\n      );\n    };\n    return(\n      <SafeAreaView style={styles.container}>\n          <FlatList\n            horizontal\n            data={this.state.items}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n          />\n      </SafeAreaView>\n    );\n  }\n}\nexport default PromoteCards;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  button:{\n    marginTop:10,\n    marginRight:5,\n    marginLeft:5,\n    borderRadius:10,\n    backgroundColor: \"#f5fff8\",\n    opacity: 1,\n  },\n})","import * as React from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  ScrollView,\n  SafeAreaView,\n  FlatList,\n  Linking,\n  ActivityIndicator,\n} from 'react-native';\n\n//import other courses\nimport CourseCard from '../components/CourseCard.js';\nimport PromoteCard from '../components/PromoteCards.js'; // This is Promotion Course\n\nimport firebaseConfig from '../config'; // import firebase config file\nimport * as firebase from 'firebase'; // import firebase pkg\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\n//Mian Code Render\nconst Item = ({ text, onPress, bgImage, des, productURL }) => (\n  <CourseCard\n    text={text}\n    onPress={onPress}\n    bgImage={bgImage}\n    des={des}\n    productURL={productURL}\n  />\n);\n\nclass NewCourse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    var get = this;\n    const myitem = firebase.database().ref('coursedata').limitToLast(100);\n    myitem.on('value', function (snapshot) {\n      const userItem = snapshot.val();\n      console.log(userItem);\n      let items = Object.values(userItem).reverse();\n      get.setState({ items: items, isLoading: false });\n    });\n  }\n\n  render(navigation) {\n    if (this.state.isLoading) {\n      return (\n        <View style={styles.preloader}>\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\n        </View>\n      );\n    }\n\n    const renderItem = ({ item }) => {\n      return (\n        <Item\n          item={item}\n          text={item.name}\n          onPress={() => this.props.navigation.navigate('Detail', item)}\n          bgImage={item.image}\n          des={item.des}\n          productURL={item.link}\n        />\n      );\n    };\n\n    return (\n      <View style={styles.container}>\n        <View>\n          {/** This is the Promote Card  */}\n          <ScrollView>\n            <PromoteCard />\n          </ScrollView>\n        </View>\n        {/** This is new Scourse */}\n        <SafeAreaView style={styles.container}>\n          <FlatList\n            data={this.state.items}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default NewCourse;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, Button, View, Text, TouchableOpacity, } from 'react-native';\nimport email from 'react-native-email';\n \nexport default class Request extends React.Component {\n    render() {\n        return (\n            <View style={styles.container}>\n                <Text style={styles.title}>Send Request!</Text>\n                <Text style={styles.subtitle}>Send Requst for Your Favorite Course. I'am Try To Provide Free That Course.</Text>\n                {/*<Button style={styles.button} title=\"Send Mail\" onPress={this.handleEmail} />*/}\n                <TouchableOpacity onPress={this.handleEmail} style={styles.button}>\n                  <Text style={styles.btnText}>Send Request</Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n \n    handleEmail = () => {\n        const to = ['harshalbhagat224@gmail.com'] // string or array of email addresses\n        email(to, {\n            subject: 'Add New Course Request!',\n            body: 'Hello devopscoding!'\n        }).catch(console.error)\n    }\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: '#FFFFFF',\n    },\n    title:{\n      textAlign: 'center',\n      fontWeight: 'bold',\n      fontSize: 25,\n      color: 'green',\n    },\n    subtitle:{\n      textAlign: 'center',\n      fontWeight: 'bold',\n      fontSize: 20,\n    },\n    button:{\n      marginTop:30,\n      alignItems: 'center',\n      backgroundColor: '#494F56',\n      padding: 10,\n      marginRight: 30,\n      marginLeft: 30,\n      borderRadius:20,\n    },\n    btnText:{\n      color:'#fff',\n      fontWeight: 'bold',\n      fontSize: 15,\n    },\n    \n})","import * as React from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  ScrollView,\n  Linking,\n} from 'react-native';\nimport Ionicons from 'react-native-vector-icons/FontAwesome';\nimport { Card} from 'react-native-paper';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render(navigation) {\n    return (\n      <View style={styles.container}>\n      <Card>\n        <View>\n          <View>\n            <Image\n              style={styles.bgimage}\n              source={{ uri: this.props.route.params.image }}\n            />\n            <TouchableOpacity\n              onPress={() => this.props.navigation.goBack()}\n              style={styles.btnBack}>\n              <Ionicons name=\"chevron-left\" size={35} color={'#fff'} />\n            </TouchableOpacity>\n          </View>\n            <Text style={styles.title}>{this.props.route.params.name}</Text>\n            <Text style={styles.des}>{this.props.route.params.des}</Text>\n\n            <TouchableOpacity\n              onPress={() => Linking.openURL(this.props.route.params.link)}\n              style={styles.btn}>\n              <Text style={styles.btnText}>Enroll Now</Text>\n            </TouchableOpacity>\n        </View>\n        </Card>\n      </View>\n    );\n  }\n}\n\nexport default Details;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  bgimage: {\n    height: 200,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    marginTop: 10,\n    marginBottom: 10,\n    fontFamily: 'Arimo',\n    padding: 5,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n  des: {\n    fontSize: 18,\n    fontFamily: 'Arimo',\n    padding: 5,\n  },\n  btn: {\n    alignItems: 'center',\n    marginTop: 30,\n    backgroundColor: '#1ed6a8',\n    height: 35,\n    borderRadius: 10,\n    marginRight: 100,\n    marginLeft: 100,\n  },\n  btnText: {\n    marginTop: 5,\n    fontSize: 20,\n    color: 'white',\n    fontFamily: 'Arimo',\n    fontWeight: 'Bold',\n  },\n  btnBack: {\n    position: 'absolute',\n    marginTop: 20,\n    marginLeft: 10,\n  },\n});\n","import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport Ionicons from 'react-native-vector-icons/FontAwesome';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n//import other files\nimport Home from '../Screen/Home';\nimport NewCourse from '../Screen/NewCourse';\nimport Request from '../Screen/Request';\nimport Detail from '../Screen/Details';\n\n// Home Stack\nconst HomeStack = createStackNavigator();\nexport function HomeStackScreen({navigation}){\n  return(\n    <HomeStack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#494F56',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      \n        <HomeStack.Screen name=\"Home\" component={Home} \n        options={{\n          headerLeft: () =>(\n            <Ionicons.Button name=\"bars\" size={25} backgroundColor=\"#494F56\" onPress={() =>{navigation.openDrawer()}}/>\n          )\n        }} />\n        <HomeStack.Screen name=\"Detail\" component={Detail} \n          options={{\n            headerShown: false,\n            \n          }}\n        />\n    </HomeStack.Navigator>\n  );\n}\n\n\n// New Course Stack\nconst NewCourseStack = createStackNavigator();\nexport function NewCourseStackScreen({navigation}){\n  return(\n    <NewCourseStack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#494F56',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n        <NewCourseStack.Screen name=\"New Course\" component={NewCourse} \n        options={{\n          headerLeft: () =>(\n            <Ionicons.Button name=\"bars\" size={25} backgroundColor=\"#494F56\" onPress={() =>{navigation.openDrawer()}}/>\n          )\n        }} />\n    </NewCourseStack.Navigator>\n  );\n}\n\n// Request Stack\nconst RequestStack = createStackNavigator();\nexport function RequestStackScreen({navigation}){\n  return(\n    <RequestStack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#494F56',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n        <NewCourseStack.Screen name=\"Request\" component={Request} \n        options={{\n          headerLeft: () =>(\n            <Ionicons.Button name=\"bars\" size={25} backgroundColor=\"#494F56\" onPress={() =>{navigation.openDrawer()}}/>\n          )\n        }} />\n    </RequestStack.Navigator>\n  );\n}\n\n\n","import React from 'react';\nimport { Share, View, Button } from 'react-native';\n\nexport const onShare = async () => {\n    try {\n      const result = await Share.share({\n        message: 'Hello Friends, This is the best applicatoin for Learn Udemy Free Courses. Here you Install This application from Play Store!',\n      });\n      if (result.action === Share.sharedAction) {\n        if (result.activityType) {\n          // shared with activity type of result.activityType\n        } else {\n          // shared\n        }\n      } else if (result.action === Share.dismissedAction) {\n        // dismissed\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };","import 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { StyleSheet, Image, SafeAreaView, Linking } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList , DrawerItem} from '@react-navigation/drawer';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\n\n//other import files\nimport { HomeStackScreen, NewCourseStackScreen, RequestStackScreen, } from './navigation/navigation';\nimport {onShare} from './Screen/Share.js';\n\nconst Drawer = createDrawerNavigator();\n\nclass App extends React.Component{\n  render(){\n    return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\"\n        drawerContent={props => <CustomDrawerContent {...props}/>}\n        drawerStyle={{\n          backgroundColor: '#494F56',\n        }}\n        drawerContentOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: '#FFFFFF',\n        }}\n      >\n        <Drawer.Screen name=\"Home\" component={HomeStackScreen}\n          options={{\n           drawerIcon: ({focused, size}) => (\n              <Icon\n                 name=\"home\"\n                 size={size}\n                 color={focused ? '#fff' : '#ccc'}\n              />\n           ),\n        }}\n        />\n        <Drawer.Screen name=\"New Course\" component={NewCourseStackScreen} \n          options={{\n           drawerIcon: ({focused, size}) => (\n              <Icon\n                 name=\"book\"\n                 size={size}\n                 color={focused ? '#fff' : '#ccc'}\n              />\n           ),\n        }}\n        />\n        <Drawer.Screen name=\"Request\" component={RequestStackScreen} \n          options={{\n           drawerIcon: ({focused, size}) => (\n              <Icon\n                 name=\"envelope\"\n                 size={size}\n                 color={focused ? '#fff' : '#ccc'}\n              />\n           ),\n        }}\n        />                       \n      </Drawer.Navigator>\n    </NavigationContainer>\n    );\n  }\n}\n\nexport default App;\n  \n\n\nfunction CustomDrawerContent(props) {\n    return (\n      <SafeAreaView style={{flex: 1}}>\n        {/** Add Icon Image */}\n        <Image\n          source={require('./assets/SideMenuIcon.png')}\n          style={styles.sideMenuIcon}\n        />\n\n      <DrawerContentScrollView {...props}>\n        <DrawerItemList {...props} />\n      <DrawerItem \n        activeTintColor= '#FFFFFF'\n        inactiveTintColor= '#FFFFFF'\n        icon={({ focused, color, size }) =>\n               <Icon\n                 name=\"share-alt\"\n                 size={size}\n                 color={focused ? '#fff' : '#ccc'}\n              />      \n              }\n        label=\"Share App\"\n        onPress={onShare}\n      />\n      <DrawerItem\n        activeTintColor= '#FFFFFF'\n        inactiveTintColor= '#FFFFFF'\n        icon={({ focused, color, size }) =>\n               <Icon\n                 name=\"star\"\n                 size={size}\n                 color={focused ? '#fff' : '#ccc'}\n              />      \n              }\n        label=\"Rate This App\"\n        onPress={() => Linking.openURL('https://play.google.com/store/apps/details?id=com.ulearn')}\n      />\n      <DrawerItem\n        activeTintColor= '#FFFFFF'\n        inactiveTintColor= '#FFFFFF'\n        icon={({ focused, color, size }) =>\n               <Icon\n                 name=\"shield\"\n                 size={size}\n                 color={focused ? '#fff' : '#ccc'}\n              />      \n              }\n        label=\"Privacy Policy\"\n        onPress={() => Linking.openURL('https://sites.google.com/view/privacypolicies/home')}\n      />\n      </DrawerContentScrollView>\n\n      </SafeAreaView>\n    );\n  }\n\nconst styles = StyleSheet.create({\n  sideMenuIcon: {\n    marginTop:70,\n    resizeMode: 'center',\n    width: 100,\n    height: 100,\n    borderRadius: 100 / 2,\n    alignSelf: 'center',\n  },\n});  ","module.exports = __webpack_public_path__ + \"static/media/SideMenuIcon.265a8196.png\";"],"sourceRoot":""}